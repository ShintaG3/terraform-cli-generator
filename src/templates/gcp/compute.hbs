terraform {
  required_providers {
    google = {
      source  = "hashicorp/google"
      version = "~> 5.0"
    }
  }
}

provider "google" {
  {{#if project_id}}
  project = "{{project_id}}"
  {{else}}
  project = var.project_id
  {{/if}}
  region  = "{{region}}"
  zone    = "{{region}}-a"
}

{{#unless project_id}}
variable "project_id" {
  description = "GCP Project ID"
  type        = string
}
{{/unless}}

resource "google_compute_firewall" "{{snakeCase name}}_firewall" {
  name    = "{{kebabCase name}}-firewall"
  network = "default"

  allow {
    protocol = "tcp"
    ports    = ["22", "80", "443"]
  }

  source_ranges = ["0.0.0.0/0"]
  target_tags   = ["{{kebabCase name}}-server"]
}

resource "google_compute_instance" "{{snakeCase name}}" {
  name         = "{{kebabCase name}}-instance"
  machine_type = "e2-micro"
  zone         = "{{region}}-a"

  tags = ["{{kebabCase name}}-server"]

  boot_disk {
    initialize_params {
      image = "ubuntu-os-cloud/ubuntu-2204-lts"
      size  = 10
      type  = "pd-standard"
    }
  }

  network_interface {
    network = "default"
    
    access_config {
      # Ephemeral public IP
    }
  }

  metadata = {
    ssh-keys = "ubuntu:${file("~/.ssh/id_rsa.pub")}"
  }

  metadata_startup_script = <<-EOF
    #!/bin/bash
    apt-get update
    apt-get install -y nginx
    systemctl start nginx
    systemctl enable nginx
    echo "<h1>Hello from {{pascalCase name}} Compute Engine!</h1>" > /var/www/html/index.html
  EOF

  labels = {
    name        = "{{kebabCase name}}"
    environment = "dev"
  }
}

output "instance_name" {
  value = google_compute_instance.{{snakeCase name}}.name
}

output "external_ip" {
  value = google_compute_instance.{{snakeCase name}}.network_interface[0].access_config[0].nat_ip
}

output "internal_ip" {
  value = google_compute_instance.{{snakeCase name}}.network_interface[0].network_ip
}